<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eaza.server.mapper.CourseOfferingMapper">
  <resultMap id="BaseResultMap" type="com.eaza.server.model.CourseOffering">
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="course_uuid" jdbcType="VARCHAR" property="courseUuid" />
    <result column="term_code" jdbcType="INTEGER" property="termCode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <resultMap id="TermResultMap" type="com.eaza.server.model.POJO.Term">
    <result column="uuid" jdbcType="VARCHAR" property="offerId" />
    <result column="term_code" jdbcType="INTEGER" property="termCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, course_uuid, term_code, `name`
  </sql>
  <select id="getOfferIdByCourseUuid" parameterType="string" resultType="java.lang.String">
    select distinct uuid
    from course_offerings
    where course_uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <select id="getTermByUuid" parameterType="string" resultMap="TermResultMap">
    select uuid, term_code
    from course_offerings
    where course_uuid = #{uuid,jdbcType=VARCHAR}
  </select>

  <select id="getTermByOfferId" parameterType="string" resultMap="TermResultMap">
    select uuid, term_code
    from course_offerings
    where uuid = #{offerId,jdbcType=VARCHAR}
  </select>

  <select id="selectByExample" parameterType="com.eaza.server.model.CourseOfferingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_offerings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.eaza.server.model.CourseOfferingExample">
    delete from course_offerings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eaza.server.model.CourseOffering">
    insert into course_offerings (uuid, course_uuid, term_code, 
      `name`)
    values (#{uuid,jdbcType=VARCHAR}, #{courseUuid,jdbcType=VARCHAR}, #{termCode,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eaza.server.model.CourseOffering">
    insert into course_offerings
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="courseUuid != null">
        course_uuid,
      </if>
      <if test="termCode != null">
        term_code,
      </if>
      <if test="name != null">
        `name`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="courseUuid != null">
        #{courseUuid,jdbcType=VARCHAR},
      </if>
      <if test="termCode != null">
        #{termCode,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eaza.server.model.CourseOfferingExample" resultType="java.lang.Long">
    select count(*) from course_offerings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_offerings
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.courseUuid != null">
        course_uuid = #{record.courseUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.termCode != null">
        term_code = #{record.termCode,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_offerings
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      course_uuid = #{record.courseUuid,jdbcType=VARCHAR},
      term_code = #{record.termCode,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>