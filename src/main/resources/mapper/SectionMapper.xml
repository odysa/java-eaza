<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eaza.server.mapper.SectionMapper">
  <resultMap id="BaseResultMap" type="com.eaza.server.model.Section">
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="course_offering_uuid" jdbcType="VARCHAR" property="courseOfferingUuid" />
    <result column="section_type" jdbcType="VARCHAR" property="sectionType" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="room_uuid" jdbcType="VARCHAR" property="roomUuid" />
    <result column="schedule_uuid" jdbcType="VARCHAR" property="scheduleUuid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, course_offering_uuid, section_type, `number`, room_uuid, schedule_uuid
  </sql>
  <select id="getSectionIdByOfferIdNNum" resultType="string">
    select uuid
    from sections
    where course_offering_uuid = #{offerId} and number = #{number}
  </select>
  <select id="selectByExample" parameterType="com.eaza.server.model.SectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sections
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.eaza.server.model.SectionExample">
    delete from sections
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eaza.server.model.Section">
    insert into sections (uuid, course_offering_uuid, section_type, 
      `number`, room_uuid, schedule_uuid
      )
    values (#{uuid,jdbcType=VARCHAR}, #{courseOfferingUuid,jdbcType=VARCHAR}, #{sectionType,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{roomUuid,jdbcType=VARCHAR}, #{scheduleUuid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.eaza.server.model.Section">
    insert into sections
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="courseOfferingUuid != null">
        course_offering_uuid,
      </if>
      <if test="sectionType != null">
        section_type,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="roomUuid != null">
        room_uuid,
      </if>
      <if test="scheduleUuid != null">
        schedule_uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="courseOfferingUuid != null">
        #{courseOfferingUuid,jdbcType=VARCHAR},
      </if>
      <if test="sectionType != null">
        #{sectionType,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="roomUuid != null">
        #{roomUuid,jdbcType=VARCHAR},
      </if>
      <if test="scheduleUuid != null">
        #{scheduleUuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eaza.server.model.SectionExample" resultType="java.lang.Long">
    select count(*) from sections
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sections
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.courseOfferingUuid != null">
        course_offering_uuid = #{record.courseOfferingUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionType != null">
        section_type = #{record.sectionType,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.roomUuid != null">
        room_uuid = #{record.roomUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleUuid != null">
        schedule_uuid = #{record.scheduleUuid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sections
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      course_offering_uuid = #{record.courseOfferingUuid,jdbcType=VARCHAR},
      section_type = #{record.sectionType,jdbcType=VARCHAR},
      `number` = #{record.number,jdbcType=INTEGER},
      room_uuid = #{record.roomUuid,jdbcType=VARCHAR},
      schedule_uuid = #{record.scheduleUuid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>